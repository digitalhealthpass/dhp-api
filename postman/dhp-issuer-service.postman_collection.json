{
	"info": {
		"_postman_id": "7ee48bd6-c6bc-45f6-aaef-b582cca88f02",
		"name": "dhp-issuer-service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "login hpass admin",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"HP_API_AUTH_TOKEN\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"",
									"let tokenStr = pm.response.json();",
									"//console.log(tokenStr);",
									"",
									"pm.globals.set(\"AUTH_TOKEN\", \"Bearer \" + tokenStr.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"hpassadmin@poc.com\",\n    \"password\": \"testing123\"\n}"
						},
						"url": {
							"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/users/login",
							"host": [
								"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login admin azure",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"HELLOWORLD_AUTH_TOKEN\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"var jsonData = pm.response.json();",
									"let tokenStr = jsonData.access_token;",
									"//console.log(tokenStr);",
									"",
									"pm.globals.set(\"AUTH_TOKEN\", \"Bearer \" + tokenStr);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"email\" : \"admin@rmscottgmail.onmicrosoft.com\",\n\"password\": \"pocPass~123\"\n}"
						},
						"url": {
							"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/users/login",
							"host": [
								"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login with VC",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"HP_API_AUTH_TOKEN\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"GDPR Upload - login hpass admin\", function () {",
									"    postman.setNextRequest(null);",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"    ",
									"    let tokenStr = pm.response.json(); ",
									"    pm.globals.set(\"AUTH_TOKEN\", \"Bearer \" + tokenStr.access_token);",
									"    postman.setNextRequest();",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"credential\": \"eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSJdLCJjcmVkZW50aWFsU2NoZW1hIjp7ImlkIjoiZGlkOmRocDozY2IxOThmZDQ1YjcxNGUxYTU5ZjcwZjJmOTkyZDk5NjRmZmVmMWNhNGQ4YzBiMWMxYmVkOGU0MDM2NjQzYjYwOjM0YTIyYmQ4N2Q4YmMxYmVkOGYzMTIzYzRhNmMxMjUwYmIxYzMzOGJjMGI5ODkxNGYxNjdiZjI1OGUxNjM3MjM7aWQ9dmVyaWZpZXJsb2dpbjt2ZXJzaW9uPTAuNyIsInR5cGUiOiJKc29uU2NoZW1hVmFsaWRhdG9yMjAxOSJ9LCJjcmVkZW50aWFsU3ViamVjdCI6eyJjb25maWdJZCI6IjQzNDA1ZDBiLWNkYzMtNDI0NS1iMTIyLTJiZjg5OGViMWE3OTpsYXRlc3QiLCJjb25maWdOYW1lIjoiSUJNJ3MgZGVmYXVsdCBjb25maWd1cmF0aW9uIFJUTyAoVS5TIiwiY3VzdG9tZXIiOiJJQk0gQ29ycG9yYXRpb24iLCJjdXN0b21lcklkIjoiZjYyYjJhMmMtNzYzOC00YjY1LTkzOTgtNzA0ZmQxODJlZjE3IiwibmFtZSI6IklCTSdzIGRlZmF1bHQgY29uZmlndXJhdGlvbiBSVE8gKFUuUykiLCJvcmdhbml6YXRpb24iOiJVbml0ZWQgU3RhdGVzIChSZXR1cm4tdG8tV29yaykiLCJvcmdhbml6YXRpb25JZCI6IjBmNDM3MDI4LTdiODgtNDBkMC04Y2YyLTJmMDIyYWU0M2M1ZCIsInR5cGUiOiJWZXJpZmllckNyZWRlbnRpYWwiLCJ2ZXJpZmllclR5cGUiOiJPcmdhbml6YXRpb24ifSwiZXhwaXJhdGlvbkRhdGUiOiIyMDMzLTAxLTAxVDAwOjAwOjAwWiIsImlkIjoiZGlkOmRocDozY2IxOThmZDQ1YjcxNGUxYTU5ZjcwZjJmOTkyZDk5NjRmZmVmMWNhNGQ4YzBiMWMxYmVkOGU0MDM2NjQzYjYwOjM2M2ZhYjQwOTA0NmY3NzBjZGJkNzEzMDNjZmUyY2YyZDNjMDIxZDQ4M2YwNzVhYWNjZjIzMmM0YjI2ZTAyOTE7dmMtMzliNWQzZTItMjAxYS00Nzc4LWI4MGEtZDVhOTZhYzJlMGVmIiwiaXNzdWFuY2VEYXRlIjoiMjAyMi0xMS0xMVQxNToyMjozN1oiLCJpc3N1ZXIiOiJkaWQ6ZGhwOjNjYjE5OGZkNDViNzE0ZTFhNTlmNzBmMmY5OTJkOTk2NGZmZWYxY2E0ZDhjMGIxYzFiZWQ4ZTQwMzY2NDNiNjA6MzYzZmFiNDA5MDQ2Zjc3MGNkYmQ3MTMwM2NmZTJjZjJkM2MwMjFkNDgzZjA3NWFhY2NmMjMyYzRiMjZlMDI5MSIsInByb29mIjp7ImNyZWF0ZWQiOiIyMDIyLTExLTExVDE1OjIyOjM3WiIsImNyZWF0b3IiOiJkaWQ6ZGhwOjNjYjE5OGZkNDViNzE0ZTFhNTlmNzBmMmY5OTJkOTk2NGZmZWYxY2E0ZDhjMGIxYzFiZWQ4ZTQwMzY2NDNiNjA6MzYzZmFiNDA5MDQ2Zjc3MGNkYmQ3MTMwM2NmZTJjZjJkM2MwMjFkNDgzZjA3NWFhY2NmMjMyYzRiMjZlMDI5MS1rZXkzIiwibm9uY2UiOiJiNWM4YTYwZS01OGRiLTRlMzQtOGFlYS0zNTA5MjJhY2MxMTUiLCJ0eXBlIjoiRWNkc2FTZWNwMjU2cjFTaWduYXR1cmUyMDE5Iiwic2lnbmF0dXJlVmFsdWUiOiI5cVlQSTFPSUYrcXlEaUphNU5zV1JDQlNsOStTSERpZURvVXE1WEttQks5TERnRUphbE81NkFtbnpQSVFwNGxoM01iTGVZbjBZaVc5TXRFSERzYnZhdz09In0sInR5cGUiOlsiSUJNRGlnaXRhbEhlYWx0aFBhc3MiLCJWZXJpZmllckNyZWRlbnRpYWwiLCJWZXJpZmlhYmxlQ3JlZGVudGlhbCJdfQ==\"\n}"
						},
						"url": {
							"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/users/login/loginWithCredential",
							"host": [
								"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
							],
							"path": [
								"users",
								"login",
								"loginWithCredential"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Issuer",
			"item": [
				{
					"name": "onboard issuer",
					"item": [
						{
							"name": "Create DHP Issuer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"payload\");",
											"});",
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"DID_ISSUER1\", jsonData.payload.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AUTH_TOKEN}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"public_key_cert\": \"-----BEGIN CERTIFICATE-----\\nMIIBCTCBsAIJAIyxl50b0PpzMAoGCCqGSM49BAMCMA0xCzAJBgNVBAYTAlVTMB4X\\nDTIyMDkyNzE0MjAwN1oXDTMyMDkyNDE0MjAwN1owDTELMAkGA1UEBhMCVVMwWTAT\\nBgcqhkjOPQIBBggqhkjOPQMBBwNCAASAioIV07iSGdSQd51yTaq4l7OW/g0seNxd\\nlfH8dlx+gTFRYQTWkESHrtIbFKhfQGp9yY4Zj93Lo3yoQIaVj4P+MAoGCCqGSM49\\nBAMCA0gAMEUCICuw9SDwiW5PTISM+GcbCg5OXmWYk6xWE9xs0bnFrZTtAiEA4/8c\\nftBK5gaTCjZuJCqhI1FNfXja9C6I3k2CuSfU6Rg=\\n-----END CERTIFICATE-----\",\n    \"private_key_cert\": \"-----BEGIN EC PRIVATE KEY-----\\nMHcCAQEEIFiY3JIj9WbdTjNB0NFFTp4E0lsRGTYzzU+sK9hd4BnhoAoGCCqGSM49\\nAwEHoUQDQgAEgIqCFdO4khnUkHedck2quJezlv4NLHjcXZXx/HZcfoExUWEE1pBE\\nh67SGxSoX0BqfcmOGY/dy6N8qECGlY+D/g==\\n-----END EC PRIVATE KEY-----\",\n    \"issuerId\": \"{{ISSUER_ID}}\",\n    \"type\": \"did:dhp\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/issuers",
									"host": [
										"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
									],
									"path": [
										"issuers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Web Issuer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"payload\");",
											"});",
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"DID_ISSUER2\", jsonData.payload.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AUTH_TOKEN}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"public_key_cert\": \"-----BEGIN PUBLIC KEY-----MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEY0gd9nnK6yr829hRTp4lSVkRfDjyHk9oLmPqNKtuCmh6lakRHvx7i3XDkbM+INXigpyDD1RsoHinbjBOSX59ew==-----END PUBLIC KEY-----\",\n    \"private_key_cert\": \"-----BEGIN PRIVATE KEY-----MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg3qkLnQhVAq7SFzQaZCxnTzWcg2cUFV/8wkNk3i5yOZehRANCAARjSB32ecrrKvzb2FFOniVJWRF8OPIeT2guY+o0q24KaHqVqREe/HuLdcORsz4g1eKCnIMPVGygeKduME5Jfn17-----END PRIVATE KEY-----\",\n    \"issuerId\": \"hpass.issuer2\",\n    \"type\": \"did:web\",\n    \"url\": \"idhpibm.github.io\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/issuers",
									"host": [
										"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
									],
									"path": [
										"issuers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create DHP Issuer(generate-keys)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"payload\");",
											"});",
											"var jsonData = pm.response.json();",
											"",
											"pm.environment.set(\"DID_ISSUER3\", jsonData.payload.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AUTH_TOKEN}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerId\": \"hpass.issuer3\",\n    \"type\": \"did:dhp\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/issuers",
									"host": [
										"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
									],
									"path": [
										"issuers"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "get issuer",
					"item": [
						{
							"name": "get Issuer1 pub keys",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AUTH_TOKEN}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/issuers/{{DID_ISSUER1}}",
									"host": [
										"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
									],
									"path": [
										"issuers",
										"{{DID_ISSUER1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get Issuer2 pub keys",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AUTH_TOKEN}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/issuers/{{DID_ISSUER2}}",
									"host": [
										"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
									],
									"path": [
										"issuers",
										"{{DID_ISSUER2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get Issuer3 pub keys",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AUTH_TOKEN}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/issuers/{{DID_ISSUER3}}",
									"host": [
										"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
									],
									"path": [
										"issuers",
										"{{DID_ISSUER3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get all Issuers pub keys",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AUTH_TOKEN}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/issuers",
									"host": [
										"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
									],
									"path": [
										"issuers"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "metadata",
					"item": [
						{
							"name": "update DHP Issuer metadata",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AUTH_TOKEN}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"IBM Issuer1\",\n    \"logo\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/issuers/{{DID_ISSUER1}}/metadata",
									"host": [
										"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
									],
									"path": [
										"issuers",
										"{{DID_ISSUER1}}",
										"metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "get DHP Issuer metadata",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{AUTH_TOKEN}}",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/issuers/{{DID_ISSUER1}}/metadata",
									"host": [
										"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
									],
									"path": [
										"issuers",
										"{{DID_ISSUER1}}",
										"metadata"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Rotate keys",
					"item": [
						{
							"name": "Rotate DHP Issuer keys",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "{{ISSUER_ID_HEADER}}",
										"value": "{{ISSUER_ID}}",
										"type": "default"
									},
									{
										"key": "Authorization",
										"value": "{{AUTH_TOKEN}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issuerId\": \"hpass.issuer1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/issuers/public-keys",
									"host": [
										"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
									],
									"path": [
										"issuers",
										"public-keys"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Schema",
			"item": [
				{
					"name": "Create Schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"payload\");",
									"});",
									"var jsonData = pm.response.json();",
									"",
									"pm.environment.set(\"DID_SCHEMA\", jsonData.payload.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "{{ISSUER_ID_HEADER}}",
								"value": "{{ISSUER_ID}}",
								"type": "default"
							},
							{
								"key": "Authorization",
								"value": "{{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@type\": \"https://w3c-ccg.github.io/vc-json-schemas/schema/1.0/schema.json\",\n    \"version\": \"0.3\",\n    \"id\": \"idhp-vaccination\",\n    \"name\": \"Proof of Vaccination\",\n    \"schema\": {\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n        \"properties\": {\n            \"booster\": {\n                \"type\": \"boolean\"\n            },\n            \"countryOfVaccination\": {\n                \"system\": \"https://www.iso.org/iso-3166-country-codes.html\",\n                \"type\": \"string\"\n            },\n            \"dateOfVaccination\": {\n                \"displayValue\": {\n                    \"de\": \"Impfdatum\",\n                    \"en\": \"Vaccination Date\"\n                },\n                \"format\": \"date\",\n                \"type\": \"string\"\n            },\n            \"disease\": {\n                \"displayValue\": {\n                    \"de\": \"Zielkrankheit\",\n                    \"en\": \"Target Disease\"\n                },\n                \"type\": \"string\"\n            },\n            \"display\": {\n                \"description\": \"Card background color.\",\n                \"pattern\": \"#\\\\w{6}\",\n                \"type\": \"string\",\n                \"visible\": false\n            },\n            \"doseNumber\": {\n                \"maxLength\": 2,\n                \"minLength\": 1,\n                \"type\": \"integer\"\n            },\n            \"dosesPerCycle\": {\n                \"maxLength\": 2,\n                \"minLength\": 1,\n                \"type\": \"integer\"\n            },\n            \"marketingAuthorizationHolder\": {\n                \"displayValue\": {\n                    \"de\": \"Hersteller\",\n                    \"en\": \"Manufacturer\"\n                },\n                \"type\": \"string\"\n            },\n            \"medicinalProductCode\": {\n                \"displayValue\": {\n                    \"de\": \"Impfstoff-Code\",\n                    \"en\": \"Vaccine Code\"\n                },\n                \"type\": \"string\"\n            },\n            \"medicinalProductName\": {\n                \"displayValue\": {\n                    \"de\": \"Impfstoff\",\n                    \"en\": \"Vaccine\"\n                },\n                \"type\": \"string\"\n            },\n            \"recipient\": {\n                \"properties\": {\n                    \"birthDate\": {\n                        \"displayValue\": {\n                            \"de\": \"Geburtsdatum\",\n                            \"en\": \"Date of Birth\"\n                        },\n                        \"format\": \"date\",\n                        \"pattern\": \"([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?\",\n                        \"type\": \"string\",\n                        \"visible\": true\n                    },\n                    \"familyName\": {\n                        \"displayValue\": {\n                            \"de\": \"Nachname\",\n                            \"en\": \"Surname\"\n                        },\n                        \"maxLength\": 100,\n                        \"minLength\": 1,\n                        \"type\": \"string\",\n                        \"visible\": true\n                    },\n                    \"givenName\": {\n                        \"displayValue\": {\n                            \"de\": \"Vorname\",\n                            \"en\": \"First Name\"\n                        },\n                        \"maxLength\": 100,\n                        \"minLength\": 1,\n                        \"type\": \"string\",\n                        \"visible\": true\n                    },\n                    \"identity\": {\n                        \"properties\": {\n                            \"DL\": {\n                                \"displayValue\": {\n                                    \"de\": \"\",\n                                    \"en\": \"Driver's license number\"\n                                },\n                                \"maxLength\": 50,\n                                \"minLength\": 1,\n                                \"type\": \"string\",\n                                \"visible\": true\n                            },\n                            \"MR\": {\n                                \"displayValue\": {\n                                    \"de\": \"\",\n                                    \"en\": \"Medical record number\"\n                                },\n                                \"maxLength\": 50,\n                                \"minLength\": 1,\n                                \"type\": \"string\",\n                                \"visible\": true\n                            },\n                            \"OTH\": {\n                                \"displayValue\": {\n                                    \"de\": \"\",\n                                    \"en\": \"Other ID\"\n                                },\n                                \"maxLength\": 50,\n                                \"minLength\": 1,\n                                \"type\": \"string\",\n                                \"visible\": true\n                            },\n                            \"PPN\": {\n                                \"displayValue\": {\n                                    \"de\": \"\",\n                                    \"en\": \"Passport number\"\n                                },\n                                \"maxLength\": 50,\n                                \"minLength\": 1,\n                                \"type\": \"string\",\n                                \"visible\": true\n                            }\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"middleName\": {\n                        \"maxLength\": 100,\n                        \"minLength\": 1,\n                        \"type\": \"string\",\n                        \"visible\": true\n                    }\n                },\n                \"required\": [\n                    \"givenName\",\n                    \"familyName\",\n                    \"birthDate\"\n                ],\n                \"type\": \"object\"\n            },\n            \"stateOfVaccination\": {\n                \"system\": \"https://pe.usps.com/text/pub28/28apb.htm\",\n                \"type\": \"string\"\n            },\n            \"type\": {\n                \"maxLength\": 100,\n                \"minLength\": 1,\n                \"type\": \"string\",\n                \"visible\": false\n            },\n            \"vaccinationHistory\": {\n                \"items\": {\n                    \"properties\": {\n                        \"dateOfVaccination\": {\n                            \"displayValue\": {\n                                \"de\": \"Impfdatum\",\n                                \"en\": \"Vaccination Date\"\n                            },\n                            \"format\": \"date\",\n                            \"type\": \"string\"\n                        },\n                        \"medicinalProductCode\": {\n                            \"displayValue\": {\n                                \"de\": \"Impfstoff-Code\",\n                                \"en\": \"Vaccine Code\"\n                            },\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\n                        \"medicinalProductCode\",\n                        \"dateOfVaccination\"\n                    ],\n                    \"type\": \"object\"\n                },\n                \"minItems\": 1,\n                \"type\": \"array\"\n            }\n        },\n        \"required\": [\n            \"type\",\n            \"recipient\",\n            \"medicinalProductCode\",\n            \"marketingAuthorizationHolder\",\n            \"doseNumber\",\n            \"dosesPerCycle\",\n            \"dateOfVaccination\",\n            \"countryOfVaccination\",\n            \"disease\"\n        ],\n        \"type\": \"object\"\n    },\n    \"authorName\": \"Digital Health Pass Issuer\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/schemas",
							"host": [
								"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
							],
							"path": [
								"schemas"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create VC login Schema",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "{{ISSUER_ID_HEADER}}",
								"value": "{{ISSUER_ID}}",
								"type": "default"
							},
							{
								"key": "Authorization",
								"value": "{{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"verifierlogin\",\n    \"name\": \"Verifier Credential for login\",\n    \"version\": \"0.7\",\n    \"@type\": \"https://w3c-ccg.github.io/vc-json-schemas/schema/1.0/schema.json\",\n    \"schema\": {\n        \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n        \"type\": \"object\",\n        \"required\": [\"name\",\"customer\", \"customerId\", \"organization\", \"organizationId\", \"type\", \"configId\", \"configName\"],\n        \"properties\": {\n            \"customer\": {\n                \"type\": \"string\",\n                \"visible\": true\n            },\n            \"customerId\": {\n                \"type\": \"string\",\n                \"visible\": false\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"visible\": true\n            },\n            \"organization\": {\n                \"type\": \"string\",\n                \"visible\": true\n            },\n            \"organizationId\": {\n                \"type\": \"string\",\n                \"visible\": false\n            },\n            \"configName\": {\n                \"type\": \"string\",\n                \"visible\": true\n            },\n            \"configId\": {\n                \"type\": \"string\",\n                \"visible\": false\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"visible\": false\n            },\n            \"verifierType\": {\n                \"description\": \"Verifier types defined by customer.\",\n                \"type\": \"string\",\n                \"visible\": true\n            }\n        }\n    }\n    \n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/schemas",
							"host": [
								"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
							],
							"path": [
								"schemas"
							]
						}
					},
					"response": []
				},
				{
					"name": "get Schema by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/schemas/{{DID_SCHEMA}}",
							"host": [
								"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
							],
							"path": [
								"schemas",
								"{{DID_SCHEMA}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get All Schemas",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/schemas",
							"host": [
								"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
							],
							"path": [
								"schemas"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Credentials",
			"item": [
				{
					"name": "Create Json Credential",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"payload\");",
									"});",
									"var jsonData = pm.response.json();",
									"",
									"pm.environment.set(\"CRED_ID\", jsonData.payload.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "{{ISSUER_ID_HEADER}}",
								"value": "hpass.issuer1",
								"type": "default"
							},
							{
								"key": "Authorization",
								"value": "{{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"schemaID\": \"{{DID_SCHEMA}}\",\n    \"type\": [\n\t    \"DigitalHealthPass\",\n        \"Vaccination\"\n\t],\n    \"data\": {\n        \"type\": \"Vaccination Card\",\n        \"display\": \"#32CD32\",\n        \"recipient\": {\n            \"givenName\": \"Jane\",\n            \"middleName\": \"Sarah\",\n            \"familyName\": \"Smith\",\n            \"birthDate\": \"2000-10-10\"\n        },\n        \"disease\": \"COVID-19\",\n        \"medicinalProductCode\": \"208\",\n        \"marketingAuthorizationHolder\": \"Pfizer Inc\",\n        \"dateOfVaccination\": \"2022-09-14\",\n        \"doseNumber\": 2,\n        \"dosesPerCycle\": 2,\n        \"batchNumber\": \"12345\",\n        \"stateOfVaccination\": \"ca\",\n        \"countryOfVaccination\": \"us\"\n    },\n    \"expirationDate\": \"2023-09-28T15:52:47Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/credentials",
							"host": [
								"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
							],
							"path": [
								"credentials"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Encoded Credential",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"payload\");",
									"});",
									"var jsonData = pm.response.json();",
									"",
									"pm.environment.set(\"CRED\", jsonData.payload);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "{{ISSUER_ID_HEADER}}",
								"value": "hpass.issuer1",
								"type": "default"
							},
							{
								"key": "Authorization",
								"value": "{{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"schemaID\": \"{{DID_SCHEMA}}\",\n    \"type\": [\n\t    \"DigitalHealthPass\",\n        \"Vaccination\"\n\t],\n    \"data\": {\n        \"type\": \"Vaccination Card\",\n        \"display\": \"#32CD32\",\n        \"recipient\": {\n            \"givenName\": \"Jane\",\n            \"middleName\": \"Sarah\",\n            \"familyName\": \"Smith\",\n            \"birthDate\": \"2000-10-10\"\n        },\n        \"disease\": \"COVID-19\",\n        \"medicinalProductCode\": \"208\",\n        \"marketingAuthorizationHolder\": \"Pfizer Inc\",\n        \"dateOfVaccination\": \"2022-09-14\",\n        \"doseNumber\": 2,\n        \"dosesPerCycle\": 2,\n        \"batchNumber\": \"12345\",\n        \"stateOfVaccination\": \"ca\",\n        \"countryOfVaccination\": \"us\"\n    },\n    \"expirationDate\": \"2023-09-28T15:52:47Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/credentials?type=encoded",
							"host": [
								"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
							],
							"path": [
								"credentials"
							],
							"query": [
								{
									"key": "type",
									"value": "encoded"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create qr Credentia",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "{{ISSUER_ID_HEADER}}",
								"value": "{{ISSUER_ID}}",
								"type": "default"
							},
							{
								"key": "Authorization",
								"value": "{{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"schemaID\": \"{{DID_SCHEMA}}\",\n    \"type\": [\n\t    \"DigitalHealthPass\",\n        \"Vaccination\"\n\t],\n    \"data\": {\n        \"type\": \"Vaccination Card\",\n        \"display\": \"#32CD32\",\n        \"recipient\": {\n            \"givenName\": \"Jane\",\n            \"middleName\": \"Sarah\",\n            \"familyName\": \"Smith\",\n            \"birthDate\": \"2000-10-10\"\n        },\n        \"disease\": \"COVID-19\",\n        \"medicinalProductCode\": \"208\",\n        \"marketingAuthorizationHolder\": \"Pfizer Inc\",\n        \"dateOfVaccination\": \"2022-09-14\",\n        \"doseNumber\": 2,\n        \"dosesPerCycle\": 2,\n        \"batchNumber\": \"12345\",\n        \"stateOfVaccination\": \"ca\",\n        \"countryOfVaccination\": \"us\"\n    },\n    \"expirationDate\": \"2023-09-28T15:52:47Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/credentials?output=qrcode",
							"host": [
								"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
							],
							"path": [
								"credentials"
							],
							"query": [
								{
									"key": "output",
									"value": "qrcode"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Credential",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"credential\": \"{{CRED}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/credentials/verify",
							"host": [
								"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
							],
							"path": [
								"credentials",
								"verify"
							],
							"query": [
								{
									"key": "type",
									"value": "string",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create VC Login Credential",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "{{ISSUER_ID_HEADER}}",
								"value": "{{ISSUER_ID}}",
								"type": "default"
							},
							{
								"key": "Authorization",
								"value": "{{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"schemaID\": \"did:dhp:3cb198fd45b714e1a59f70f2f992d9964ffef1ca4d8c0b1c1bed8e4036643b60:363fab409046f770cdbd71303cfe2cf2d3c021d483f075aaccf232c4b26e0291;id=verifierlogin;version=0.7\",\n    \"data\": {\n        \"type\": \"id\",\n        \"configName\": \"Name of configuration\",\n        \"configId\": \"id:latest\",\n        \"customer\": \"Richard Scott\",\n        \"customerId\": \"customerId\",\n        \"name\": \"Richard Scott\",\n        \"organization\": \"rmscott-org\",\n        \"organizationId\": \"rmscott-orgid\",\n        \"verifierType\": \"verfierType\"\n    },\n    \"type\": [ \"VC\" ],\n    \"expirationDate\": \"2033-01-01T00:00:00Z\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/credentials?output=qrcode&type=string",
							"host": [
								"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
							],
							"path": [
								"credentials"
							],
							"query": [
								{
									"key": "output",
									"value": "qrcode"
								},
								{
									"key": "type",
									"value": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke Credential",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "{{ISSUER_ID_HEADER}}",
								"value": "{{ISSUER_ID}}",
								"type": "default"
							},
							{
								"key": "Authorization",
								"value": "{{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{CRED_ID}}\",\n    \"reason\": \"Wrong certificate\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/credentials/revoked",
							"host": [
								"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
							],
							"path": [
								"credentials",
								"revoked"
							],
							"query": [
								{
									"key": "type",
									"value": "string",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke Credential",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "{{ISSUER_ID_HEADER}}",
								"value": "{{ISSUER_ID}}",
								"type": "default"
							},
							{
								"key": "Authorization",
								"value": "{{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"4\",\n    \"reason\": \"Wrong certificate\"\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/credentials/revoked/{{CRED_ID}}",
							"host": [
								"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
							],
							"path": [
								"credentials",
								"revoked",
								"{{CRED_ID}}"
							],
							"query": [
								{
									"key": "type",
									"value": "string",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Revoked Credentials",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "{{ISSUER_ID_HEADER}}",
								"value": "{{ISSUER_ID}}",
								"type": "default"
							},
							{
								"key": "Authorization",
								"value": "{{AUTH_TOKEN}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{CREDENTIAL_ISSUER_SERVICE_URL}}/credentials/revoked/?limit=1&skip=1",
							"host": [
								"{{CREDENTIAL_ISSUER_SERVICE_URL}}"
							],
							"path": [
								"credentials",
								"revoked",
								""
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "skip",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}