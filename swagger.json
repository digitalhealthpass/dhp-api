{
  "openapi": "3.0.3",
  "info": {
    "title": "Digital Health Pass API",
    "description": "To view the available API endpoints, first login via the /users/login API and then refresh this page in your browser.",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "users",
      "description": "Manage users"
    },
    {
      "name": "credentials",
      "description": "Manage credentials"
    },
    {
      "name": "schemas",
      "description": "Manage schemas"
    },
    {
      "name": "issuers",
      "description": "Manage issuers"
    }
  ],
  "servers": [
    {
      "url": "/api/v1/credentials-issuer",
      "description": "Sandbox"
    }
  ],
  "paths": {
    "/users/login/appid": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "APPID user login",
        "description": "Login as a appid registered user",
        "operationId": "loginAppId",
        "requestBody": {
          "description": "Login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful user login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed login due to invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/users/login/azure": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Azure AD user login",
        "description": "Login as a Azure AD registered user",
        "operationId": "userLogin",
        "requestBody": {
          "description": "Login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful user login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed login due to invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/users/login/vc": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Login using Verifiable Credential",
        "description": "Login using Verifiable Credential",
        "operationId": "userLoginWithCredential",
        "parameters": [
          {
            "in": "header",
            "name": "x-hpass-issuer-id",
            "description": "Issuer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Login using Verifiable Credential",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginWithCredentialRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful user login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed login due to invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/credentials": {
      "post": {
        "tags": [
          "credentials"
        ],
        "summary": "Create credential",
        "description": "Create a new credential. Can optionally specify an expirationDate for the credential and a list of data fields that should be obfuscated",
        "operationId": "createCredential",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-hpass-issuer-id",
            "description": "Issuer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Credential type",
            "schema": {
              "type": "string",
              "enum": [
                "string",
                "encoded"
              ]
            }
          },
          {
            "in": "query",
            "name": "output",
            "description": "Output type",
            "schema": {
              "type": "string",
              "enum": [
                "qrcode"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Credential-schema information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCredentialRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Credential created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCredentialResponse"
                }
              },
              "image/png": {
                "schema": {
                  "$ref": "#/components/schemas/CreateQRCredentialResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/credentials/revoked": {
      "post": {
        "tags": [
          "credentials"
        ],
        "summary": "Revoke credential",
        "description": "Invalidate a credential by revoking it",
        "operationId": "revokeCredential",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-hpass-issuer-id",
            "description": "Issuer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Information for credential to be revoked",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeCredentialRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully revoked credential",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/credentials/revoked/{credentialDID}": {
      "get": {
        "tags": [
          "credentials"
        ],
        "summary": "Get revoke status",
        "description": "Get the revoke a status of a credential. Fails with 404 error if credential has not already been revoked",
        "operationId": "getRevokeStatus",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-hpass-issuer-id",
            "description": "Issuer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "credentialDID",
            "description": "Credential DID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved revoke status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevokeStatusResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/credentials/revoked/": {
      "get": {
        "tags": [
          "credentials"
        ],
        "summary": "Get all revoked credentials",
        "description": "Get all revoked credentials.",
        "operationId": "getAllRevokedCredentials",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-hpass-issuer-id",
            "description": "Issuer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "credentialID",
            "description": "Credential ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved revoke status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevokeStatusOptionalResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "409": {
            "$ref": "#/components/responses/ConflictError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/schemas/{did}": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Get schema by DID",
        "description": "Retrieve a schema by its DID",
        "operationId": "getSchemaByDID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-hpass-issuer-id",
            "description": "Issuer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "did",
            "description": "Schema DID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaInfoResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/schemas": {
      "get": {
        "tags": [
          "schemas"
        ],
        "summary": "Get all schemas",
        "description": "Get all schemas with optional query parameters",
        "operationId": "querySchemas",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-hpass-issuer-id",
            "description": "Issuer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully queried schemas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "payload": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "post": {
        "tags": [
          "schemas"
        ],
        "summary": "Create schema",
        "description": "Create a new schema",
        "operationId": "createSchema",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-hpass-issuer-id",
            "description": "Issuer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSchemaRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Schema in request body is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/issuers": {
      "post": {
        "tags": [
          "issuers"
        ],
        "summary": "Onboard issuer",
        "description": "Onboard a new issuer",
        "operationId": "createIssuer",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
        ],
        "requestBody": {
          "description": "Issuer information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIssuerRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "issuer onboarded Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/issuers/{did}": {
      "get": {
        "tags": [
          "issuers"
        ],
        "summary": "Get issuer",
        "description": "Get an issuer's public information",
        "operationId": "getIssuer",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "did",
            "description": "Issuer DID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved issuer information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuerIdInfoResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/issuers/": {
      "get": {
        "tags": [
          "issuers"
        ],
        "summary": "Get all issuers",
        "description": "Get all issuer's public information",
        "operationId": "getAllIssuer",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved all issuers information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuerInfoResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/issuers/{did}/metadata": {
      "get": {
        "tags": [
          "issuers"
        ],
        "summary": "Get issuer metadata",
        "description": "Get an issuer's metadata",
        "operationId": "getIssuerMetadata",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "did",
            "description": "Issuer DID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved issuer metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuerMetadataResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "put": {
        "tags": [
          "issuers"
        ],
        "summary": "Update issuer metadata",
        "description": "Update an issuer's metadata",
        "operationId": "updateIssuerMetadata",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "did",
            "description": "Issuer DID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update metadata of an issuer",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "metadata": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully updated issuer metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/issuers/public-keys": {
      "post": {
        "tags": [
          "issuers"
        ],
        "summary": "Rotate issuer keys",
        "description": "Rotate an issuer's public keys",
        "operationId": "rotateIssuerKeys",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Rotate issuer keys",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "issuerId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully rotated issuer's keys",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/InvalidRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "UserLoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserLoginResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer"
          },
          "scope": {
            "type": "string"
          }
        }
      },
      "LoginWithCredentialRequest": {
        "type": "object",
        "required": [
          "credential"
        ],
        "properties": {
          "credential": {
            "type": "string"
          }          
        }
      },
      "CreateCredentialRequest": {
        "type": "object",
        "required": [
          "schemaID",
          "data"
        ],
        "properties": {
          "schemaID": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time"
          },
          "obfuscation": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateCredentialResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "object",
            "properties": {
              "@context": {
                "type": "object",
                "properties": {
                  "cred": {
                    "type": "string"
                  }
                }
              },
              "id": {
                "type": "string"
              },
              "type": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "issuer": {
                "type": "string"
              },
              "issuanceDate": {
                "type": "string"
              },
              "credentialSchema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              },
              "credentialSubject": {
                "type": "object"
              },
              "proof": {
                "type": "object",
                "properties": {
                  "created": {
                    "type": "string"
                  },
                  "creator": {
                    "type": "string"
                  },
                  "nonce": {
                    "type": "string"
                  },
                  "signatureValue": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              },
              "expirationDate": {
                "type": "string",
                "format": "date-time"
              },
              "obfuscation": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "CreateQRCredentialResponse": {
        "type": "string",
        "format": "binary"
      },
      "RevokeCredentialRequest": {
        "type": "object",
        "required": [
          "id",
          "reason"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "RevokeStatusResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "created_by": {
                "type": "string"
              },
              "created_at": {
                "type": "integer"
              },
              "updated_at": {
                "type": "integer"
              }
            }
          }
        }
      },
      "RevokeStatusOptionalResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "SchemaInfoResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "payload": {
            "type": "object",
            "properties": {
              "@type": {
                "type": "string"
              },
              "modelVersion": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "author": {
                "type": "string"
              },
              "authorName": {
                "type": "string"
              },
              "authored": {
                "type": "string"
              },
              "schema": {
                "type": "object",
                "properties": {
                  "$schema": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              },
              "proof": {
                "type": "object",
                "properties": {
                  "created": {
                    "type": "string"
                  },
                  "creator": {
                    "type": "string"
                  },
                  "nonce": {
                    "type": "string"
                  },
                  "signatureValue": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "CreateSchemaRequest": {
        "type": "object",
        "required": [
          "id",
          "name",
          "version",
          "schema"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "schema": {
            "type": "object"
          }
        }
      },
      "CreateIssuerRequest": {
        "type": "object",
        "required": [
          "issuerId",
          "type"
        ],
        "properties": {
          "issuerId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "did:dhp",
              "did:web'"
            ]
          },
          "private_key_cert": {
            "type": "string"
          },
          "public_key_cert": {
            "type": "string"
          }
        }
      },
      "CommonResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "payload": {
            "type": "object",
            "properties": {
              "ok": {
                "type": "boolean"
              },
              "id": {
                "type": "integer"
              }
            }
          }
        }
      },
      "IssuerInfoResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "type": "object",
            "properties": {
              "total_rows": {
                "type": "integer"
              },
              "limit": {
                "type": "integer"
              },
              "skip": {
                "type": "integer"
              },
              "rows": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "created": {
                      "type": "string",
                      "format": "datetime"
                    },
                    "updated": {
                      "type": "string",
                      "format": "datetime"
                    },
                    "@context": {
                      "type": "object",
                      "properties": {
                        "did": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "publicKey": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "IssuerIdInfoResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "rev": {
                "type": "integer"
              },
              "@context": {
                "type": "array"
              },
              "publicKey": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "string"
                    },
                    "type": {
                      "type": "string",
                      "format": "string"
                    },
                    "controller": {
                      "type": "string",
                      "format": "string"
                    },
                    "@publicKeyJwk": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "IssuerMetadataResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          }
        }
      },
      "BasicErrorMessage": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "responses": {
      "InvalidRequestError": {
        "description": "Missing required fields in request body",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BasicErrorMessage"
            }
          }
        }
      },
      "UnauthorizedError": {
        "description": "Logged in user is unauthorized to make this request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BasicErrorMessage"
            }
          }
        }
      },
      "NotFoundError": {
        "description": "Resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BasicErrorMessage"
            }
          }
        }
      },
      "ConflictError": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BasicErrorMessage"
            }
          }
        }
      },
      "ServerError": {
        "description": "Unexpected server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BasicErrorMessage"
            }
          }
        }
      }
    }
  }
}